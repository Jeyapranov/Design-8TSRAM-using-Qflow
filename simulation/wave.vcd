$date
	Wed Jul  9 11:32:39 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module test $end
$var wire 8 ! dout [7:0] $end
$var reg 4 " addr [3:0] $end
$var reg 1 # clk $end
$var reg 1 $ cs $end
$var reg 8 % din [7:0] $end
$var reg 1 & re $end
$var reg 1 ' rst_n $end
$var reg 1 ( we $end
$scope module uut $end
$var wire 1 ) access_en $end
$var wire 4 * addr [3:0] $end
$var wire 1 # clk $end
$var wire 1 $ cs $end
$var wire 8 + din [7:0] $end
$var wire 1 & re $end
$var wire 1 ' rst_n $end
$var wire 1 ( we $end
$var reg 8 , dout [7:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 ,
b0 +
b0 *
0)
0(
0'
0&
b0 %
0$
0#
b0 "
b0 !
$end
#5
1#
#10
0#
1'
#15
bz !
bz ,
1#
#20
1)
0#
b10101010 %
b10101010 +
b10 "
b10 *
1(
1$
#25
1#
#30
0)
0#
0(
#35
1#
#40
1)
0#
1&
#45
b10101010 !
b10101010 ,
1#
#50
0)
0#
0&
#55
bz !
bz ,
1#
#60
0#
#65
1#
#70
0#
